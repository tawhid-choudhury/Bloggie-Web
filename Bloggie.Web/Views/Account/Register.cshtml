@model Bloggie.Web.Models.ViewModels.RegisterViewModel
@{
}

<div>
	<div class="container min-vh-50 d-flex justify-content-center align-items-center">
		<div class="row w-100">
			<div class="col-md-6 mx-auto">
				<h3 class="text-center">Register Account </h3>
				<form class="" method="post">
					<div class="mb-3">
						<label class="form-label">Username</label>
						<input class="form-control"
							   type="text"
							   id="username"
							   asp-for="UserName"
							   required />
						<span class="text-danger" asp-validation-for="UserName"></span>
					</div>
					<div class="mb-3">
						<label class="form-label">Email</label>
						<input class="form-control"
							   type="email"
							   id="email"
							   asp-for="Email"
							   required />
						<span class="text-danger" asp-validation-for="Email"></span>
					</div>
					<div class="mb-3">
						<label class="form-label">Password</label>
						<input class="form-control"
							   type="password"
							   id="password"
							   asp-for="Password"
							   required />
						<span class="text-danger" asp-validation-for="Password"></span>

						<!-- Password rules -->
						<div class="form-text">
							Password must include:
							<ul class="mb-0">
								<li>At least 6 characters</li>
								<li>At least one uppercase letter</li>
								<li>At least one lowercase letter</li>
								<li>At least one number</li>
								<li>At least one special character</li>
							</ul>
						</div>
					</div>

					<div id="password-feedback" class="mt-2 text-danger small"></div>

					<div class="mb-3">
						<button class="btn btn-dark mt-3 w-100" type="submit">Register</button>
					</div>

				</form>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const passwordInput = document.getElementById("password");
			const feedback = document.getElementById("password-feedback");

			passwordInput.addEventListener("input", () => {
				const password = passwordInput.value;
				const messages = [];

				const hasMinLength = password.length >= 6;
				const hasUpper = /[A-Z]/.test(password);
				const hasLower = /[a-z]/.test(password);
				const hasDigit = /[0-9]/.test(password);
				const hasSpecial = /[^A-Za-z0-9]/.test(password);

				if (!hasMinLength) messages.push("• Minimum 6 characters");
				if (!hasUpper) messages.push("• At least one uppercase letter");
				if (!hasLower) messages.push("• At least one lowercase letter");
				if (!hasDigit) messages.push("• At least one number");
				if (!hasSpecial) messages.push("• At least one special character");

				// Visual feedback
				passwordInput.classList.remove("is-valid", "is-invalid");

				if (password.length === 0) {
					feedback.innerHTML = "";
				}
				else if (messages.length > 0) {
					feedback.innerHTML = messages.join("<br>");
					passwordInput.classList.add("is-invalid");
				} else {
					feedback.innerHTML = "<span class='text-success'>✅ Password meets all requirements</span>";
					passwordInput.classList.add("is-valid");
				}
			});
		});
	</script>
}
