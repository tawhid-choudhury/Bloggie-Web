@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@model Bloggie.Web.Models.ViewModels.BlogDetailsViewModel

@{
}
@{
	ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5 ">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6 bg-secondary bg-opacity-10 p-3 rounded-2">
			@if (Model != null)
			{
				<h1>@Model.Heading</h1>
				<div class="d-flex justify-content-between mb-3">
					<span class="text-secondary">@Model.Author</span>
					<span class="text-secondary">@Model.PublishedDate.ToLongDateString()</span>
				</div>

				<div class="mb-3">
					@if (signInManager.IsSignedIn(User))
					{
						@if (Model.Liked)
						{
							<p>Already liked</p>
							<a style="cursor: pointer">
								<i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="btnLike" style="cursor: pointer">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}


						<span id="totalLikes">@Model.TotalLikes Likes</span>
					}
				</div>

				<div class="mb-4">
					<p>
						@foreach (var tag in Model.Tags)
						{
							<span class="badge bg-secondary me-1">@tag.Name</span>
						}
					</p>
				</div>

				<img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3 rounded-2" />

				<div class="mb-3 blog-content">
					@Html.Raw(Model.Content)
				</div>

			}
			else
			{
				<p>Blog Post Not Found!</p>
			}
		</div>
	</div>
</div>

@section Scripts
{
	<script>
		const btnLikeElement = document.getElementById("btnLike");
		const totalLikeElement = document.getElementById("totalLikes")

		async function getTotalLikes(){
			fetch('/api/BlogPostLike/@Model.Id/totalLikes',
			{
				method: "GET",
				headers:{
				"Content-Type":"application/json",
				'Accept': "*/*"
				},
			})
			.then(data => data.json())
			.then(result => totalLikeElement.innerHTML=result)
		}


		async function addLikeForBlog(){
			fetch("/api/BlogPostLike/Add",{
				method: "POST",
				headers:{
				"Content-Type":"application/json",
				'Accept': "*/*"
				},
				body: JSON.stringify({
					blogPostId:"@Model.Id",
					userId:'@userManager.GetUserId(User)'
				})
			}).then(()=>{
				btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>'
				btnLikeElement.removeEventListener("click",addLikeForBlog);
				getTotalLikes();
			})
		}

		btnLikeElement.addEventListener("click", addLikeForBlog)

	</script>
}